<UserControl
    x:Class="BSE.Tunes.StoreApp.Views.SearchResultTracksUserControlViewModel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:usercontrols="using:BSE.Tunes.StoreApp.Controls"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.DataContext>
        <vm:SearchResultTracksUserControlViewModel x:Name="ViewModel"/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <DataTemplate x:Name="narrowListViewItem">
            <Grid x:Name="listViewItem" Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="80"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                            <MenuFlyout.Items>
                                <MenuFlyoutItem x:Uid="MenuFlyoutPlay" Text="Play" Command="{Binding DataContext.SelectItemCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                                <MenuFlyoutItem x:Uid="MenuFlyoutShowAlbum" Text="Show Album" Command="{Binding DataContext.ShowAlbumCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                            </MenuFlyout.Items>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>
                    <TextBlock Text="{Binding Data.Name}"
                                       TextTrimming="WordEllipsis" 
                                       VerticalAlignment="Center" Grid.Row="0"/>
                    <TextBlock TextTrimming="WordEllipsis" TextWrapping="NoWrap"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       VerticalAlignment="Center" Grid.Row="1">
                                <Run Text="{Binding Data.Album.Artist.Name}"/>
                                <Run Text="&#xE7C8;" FontFamily="Segoe MDL2 Assets" FontSize="8"/>
                                <Run Text="{Binding Data.Album.Title}" />
                    </TextBlock>
                </Grid>
                <TextBlock Text="{Binding Data.Duration}"
                           Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1" />
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <core:InvokeCommandAction Command="{Binding DataContext.OpenFlyoutCommand, ElementName=listview}"
                                                  InputConverter="{StaticResource RightTappedToPointConverter}"
                                                  InputConverterParameter="{Binding ElementName=listViewItem}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Name="normalListViewItem">
            <UserControl>
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                            <VisualState x:Name="VisualStateNarrow">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth" Value="0"/>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].Width" Value="0"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="VisualStateNormal">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth" Value="0"/>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].Width" Value="0"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="VisualStateWide">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth"  Value="300"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="listViewItem" Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="300" MaxWidth="400"/>
                            <ColumnDefinition MinWidth="300" MaxWidth="400"/>
                            <ColumnDefinition MinWidth="300" MaxWidth="400"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                                <MenuFlyout.Items>
                                    <MenuFlyoutItem x:Uid="MenuFlyoutPlay" Text="Play" Command="{Binding DataContext.SelectItemCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                                    <MenuFlyoutItem x:Uid="MenuFlyoutShowAlbum" Text="Show Album" Command="{Binding DataContext.ShowAlbumCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                                </MenuFlyout.Items>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                        <TextBlock Text="{Binding Data.Name}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Margin="12,0,0,0" Grid.Column="0"/>
                        <TextBlock Text="{Binding Data.Album.Artist.Name}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Grid.Column="1"/>
                        <TextBlock Text="{Binding Data.Album.Title}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Grid.Column="2"/>
                        <TextBlock Text="{Binding Data.Duration}" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,12,0" Grid.Column="3" />
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="RightTapped">
                                <core:InvokeCommandAction Command="{Binding DataContext.OpenFlyoutCommand, ElementName=listview}"
                                                  InputConverter="{StaticResource RightTappedToPointConverter}"
                                                  InputConverterParameter="{Binding ElementName=listViewItem}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </Grid>
                </Grid>
            </UserControl>
        </DataTemplate>

    </UserControl.Resources>

    <RelativePanel Padding="20,10,20,10">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listview.ItemTemplate" Value="{StaticResource narrowListViewItem}"/>
                        <Setter Target="listview.AlternatingRow" Value="Transparent"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listview.ItemTemplate" Value="{StaticResource normalListViewItem}"/>
                        <Setter Target="listview.AlternatingRow" Value="{StaticResource ListViewAlternatingRowBrush}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listview.ItemTemplate" Value="{StaticResource normalListViewItem}"/>
                        <Setter Target="listview.AlternatingRow" Value="{StaticResource ListViewAlternatingRowBrush}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <HyperlinkButton x:Name="sectionName" Foreground="{ThemeResource SystemBaseHighColor}" Command="{Binding NavigateToPageCommand}">
            <HyperlinkButton.Content>
                <TextBlock x:Uid="TracksResultSection_SectionHeader" TextTrimming="CharacterEllipsis" Style="{StaticResource SectionSubtitleTextBlockStyle}"
                           Text="Albums"/>
            </HyperlinkButton.Content>
        </HyperlinkButton>
        <HyperlinkButton x:Name="sectionButton" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWith="sectionName"
                         Command="{Binding NavigateToPageCommand}" FontSize="14">
            <HyperlinkButton.Content>
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="&#xE8A9;" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center" Grid.Column="0"/>
                    <TextBlock x:Uid="TracksResultSection_ShowAll" Text="Show All" VerticalAlignment="Center" Margin="6,0,0,0" Grid.Column="1" />
                </Grid>
            </HyperlinkButton.Content>
        </HyperlinkButton>

        <usercontrols:ListView x:Name="listview" Margin="0,12,0,0" ItemTemplate="{StaticResource normalListViewItem}"
                               RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="sectionButton"
                               ItemsSource="{Binding Items}"
                               SelectionMode="None" IsItemClickEnabled="True"
                               controlextensions:ListViewExtensions.Command="{Binding SelectItemCommand}"
                               AlternatingRow="{StaticResource ListViewAlternatingRowBrush}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </ListView.ItemContainerStyle>
        </usercontrols:ListView>

    </RelativePanel>

</UserControl>
