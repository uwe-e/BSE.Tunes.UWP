<Page
    x:Class="BSE.Tunes.StoreApp.Views.SearchResultTracksPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:controls="using:Template10.Controls"
    xmlns:usercontrols="using:BSE.Tunes.StoreApp.Controls"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
    xmlns:converters="using:BSE.Tunes.StoreApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:SearchResultTracksPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <DataTemplate x:Name="narrowListViewItem">
            <Grid x:Name="listViewItem" Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="80"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                            <MenuFlyout.Items>
                                <MenuFlyoutItem x:Uid="MenuFlyoutPlay" Text="Play" Command="{Binding DataContext.SelectItemCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                                <MenuFlyoutItem x:Uid="MenuFlyoutShowAlbum" Text="Show Album" Command="{Binding DataContext.ShowAlbumCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                            </MenuFlyout.Items>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>
                    <TextBlock Text="{Binding Data.Name}"
                                       TextTrimming="WordEllipsis" 
                                       VerticalAlignment="Center" Grid.Row="0"/>
                    <TextBlock TextTrimming="WordEllipsis" TextWrapping="NoWrap"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       VerticalAlignment="Center" Grid.Row="1">
                                <Run Text="{Binding Data.Album.Artist.Name}"/>
                                <Run Text="&#xE7C8;" FontFamily="Segoe MDL2 Assets" FontSize="8"/>
                                <Run Text="{Binding Data.Album.Title}" />
                    </TextBlock>
                </Grid>
                <TextBlock Text="{Binding Data.Duration}"
                           Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1" />
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <core:InvokeCommandAction Command="{Binding DataContext.OpenFlyoutCommand, ElementName=listview}"
                                                  InputConverter="{StaticResource RightTappedToPointConverter}"
                                                  InputConverterParameter="{Binding ElementName=listViewItem}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Name="normalListViewItem">
            <UserControl>
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                            <VisualState x:Name="VisualStateNarrow">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth" Value="0"/>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].Width" Value="0"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="VisualStateNormal">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth" Value="0"/>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].Width" Value="0"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="VisualStateWide">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth"  Value="300"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="listViewItem" Height="48">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="300" MaxWidth="400"/>
                            <ColumnDefinition MinWidth="300" MaxWidth="400"/>
                            <ColumnDefinition MinWidth="300" MaxWidth="400"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                                <MenuFlyout.Items>
                                    <MenuFlyoutItem x:Uid="MenuFlyoutPlay" Text="Play" Command="{Binding DataContext.SelectItemCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                                    <MenuFlyoutItem x:Uid="MenuFlyoutShowAlbum" Text="Show Album" Command="{Binding DataContext.ShowAlbumCommand, ElementName=listview}" CommandParameter="{Binding}"/>
                                </MenuFlyout.Items>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                        <TextBlock Text="{Binding Data.Name}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Margin="12,0,0,0" Grid.Column="0"/>
                        <TextBlock Text="{Binding Data.Album.Artist.Name}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Grid.Column="1"/>
                        <TextBlock Text="{Binding Data.Album.Title}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Grid.Column="2"/>
                        <TextBlock Text="{Binding Data.Duration}" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,12,0" Grid.Column="3" />
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="RightTapped">
                                <core:InvokeCommandAction Command="{Binding DataContext.OpenFlyoutCommand, ElementName=listview}"
                                                  InputConverter="{StaticResource RightTappedToPointConverter}"
                                                  InputConverterParameter="{Binding ElementName=listViewItem}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </Grid>
                </Grid>
            </UserControl>
        </DataTemplate>
    </Page.Resources>
    
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageHeader.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageHeader.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <usercontrols:AutoSuggestionPageHeader x:Name="pageHeader"
                                               x:Uid="SearchResultTracksPage_Header"
                                               PlaceholderText="Search"
                                               QueryIcon="Find"
                                               ButtonIcon="Find"
                                               HeaderText="Songs"
                                               QueryText="{x:Bind ViewModel.QueryText, Mode=TwoWay}"
                                               ItemsSource="{x:Bind ViewModel.SearchSuggestions}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Visibility="Collapsed">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="TextChanged">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.TextChangedCommand}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="QuerySubmitted">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.QuerySubmittedCommand}" InputConverter="{StaticResource AutoSuggestQueryParameterConverter}" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="SuggestionChosen">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.SuggestionChosenCommand}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </usercontrols:AutoSuggestionPageHeader>

        <usercontrols:ListView x:Name="listview" Margin="0,12,0,0" ItemTemplate="{StaticResource normalListViewItem}"
                               RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="pageHeader"
                               ItemsSource="{Binding Tracks}" DataFetchSize="1"
                               SelectionMode="None" IsItemClickEnabled="True"
                               controlextensions:ListViewExtensions.Command="{Binding SelectItemCommand}"
                               AlternatingRow="{StaticResource ListViewAlternatingRowBrush}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </ListView.ItemContainerStyle>
        </usercontrols:ListView>

    </RelativePanel>
</Page>
