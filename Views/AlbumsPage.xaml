<Page
    x:Class="BSE.Tunes.StoreApp.Views.AlbumsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:BSE.Tunes.StoreApp.Converters"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:AlbumsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <Style x:Key="NormalView" TargetType="GridViewItem">
            <Setter Property="Margin" Value="0,0,12,24"/>
            <Setter Property="Padding" Value="0" />
            <Setter Property="MaxWidth" Value="150" />
        </Style>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar x:Uid="BottomAppBar" Visibility="{Binding IsCommandBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <AppBarButton x:Uid="ButtonClearSelection" Icon="Bullets" Command="{Binding ClearSelectionCommand}"/>
            <AppBarSeparator/>
            <AppBarButton x:Uid="ButtonPlaySelection" Icon="Play" Command="{Binding PlaySelectedItemsCommand}"/>
        </CommandBar>
    </Page.BottomAppBar>
    
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageHeader.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageHeader.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--  header  -->
        <controls:PageHeader x:Name="pageHeader"
                             x:Uid="AlbumsPage_Header"
                             Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Albums"
                             Visibility="Collapsed"/>

        <Grid Padding="24,10,24,10" RelativePanel.AlignBottomWithPanel="True"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="pageHeader">
            <GridView x:Name="gridView" ItemsSource="{Binding Albums}" DataFetchSize="1" ItemContainerStyle="{StaticResource NormalView}"
                      SelectionMode="{Binding HasSelectedItems, Converter={StaticResource BooleanToSelectionModeConverter}}"
                      IsItemClickEnabled="{Binding HasSelectedItems, Converter={StaticResource InverseBooleanConverter}}"
                      controlextensions:ListViewExtensions.Command="{Binding SelectItemCommand}"
                      controlextensions:ListViewExtensions.SelectedItems="{Binding SelectedItems, Mode=TwoWay}">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="gridViewItem" Width="150">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="150"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=gridViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                                    <MenuFlyout.Items>
                                        <MenuFlyoutItem x:Uid="MenuFlyoutPlayAll" Text="Play" Command="{Binding DataContext.PlayAllCommand, ElementName=gridView}" CommandParameter="{Binding}"/>
                                        <MenuFlyoutSeparator/>
                                        <MenuFlyoutItem x:Uid="MenuFlyoutSelectItems" Text="Select"
                                            Command="{Binding DataContext.SelectItemsCommand, ElementName=gridView}" CommandParameter="{Binding}"
                                            Visibility="{Binding DataContext.HasSelectedItems, ElementName=gridView, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                                    </MenuFlyout.Items>
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                            <Image x:Name="image" Stretch="Uniform" Source="{Binding Path=ImageSource}" Height="150" Grid.Row="0"/>
                            <TextBlock Grid.Row="1" Text="{Binding Title}" TextWrapping="WrapWholeWords" TextTrimming="WordEllipsis" MaxLines="2" x:Name="title" FontWeight="SemiBold"/>
                            <TextBlock Grid.Row="2" Text="{Binding Subtitle}" FontWeight="SemiLight" x:Name="description" TextTrimming="WordEllipsis" FontSize="12" />
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <core:InvokeCommandAction Command="{Binding DataContext.OpenFlyoutCommand, ElementName=gridView}"
                                                              InputConverter="{StaticResource RightTappedToPointConverter}"
                                                              InputConverterParameter="{Binding ElementName=gridViewItem}"/>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
                
            </GridView>


        </Grid>

    </RelativePanel>
</Page>
