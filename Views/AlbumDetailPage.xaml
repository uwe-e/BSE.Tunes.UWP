<Page
    x:Class="BSE.Tunes.StoreApp.Views.AlbumDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:controls="using:Template10.Controls"
    xmlns:usercontrols="using:BSE.Tunes.StoreApp.Controls"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
    xmlns:converters="using:BSE.Tunes.StoreApp.Converters"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:AlbumDetailPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.BottomAppBar>
        <CommandBar x:Uid="BottomAppBar" Visibility="{Binding IsCommandBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <AppBarButton x:Uid="ButtonClearSelection" Icon="Bullets" Command="{Binding ClearSelectionCommand}"/>
            <AppBarSeparator/>
            <AppBarButton x:Uid="ButtonPlaySelection" Icon="Play"
                            Command="{Binding PlaySelectedItemsCommand}"/>
            <AppBarButton x:Name="buttonAddTo" x:Uid="ButtonAddToPlaylist" Icon="Add"
                            Command="{Binding OpenPlaylistFlyoutCommand}">
                <AppBarButton.ContextFlyout>
                    <Flyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsPlaylistFlyoutOpen, Mode=TwoWay}"
                            controlextensions:FlyoutExtensions.Parent="{Binding ElementName=buttonAddTo}"
                            controlextensions:FlyoutExtensions.ItemsSource="{Binding MenuItemsPlaylist}">
                        <controlextensions:FlyoutExtensions.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <MenuFlyoutItem Command="{Binding MenuItemClickedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Text="{Binding Text}"
                                                    controlextensions:MenuFlyoutItem.UpdateTagTarget="True"
                                                    Tag="{Binding InsertMode, ConverterParameter=Selected, Converter={StaticResource InsertModeConverter}, Mode=TwoWay}"
                                                    Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"/>
                                    <MenuFlyoutSeparator Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}"/>
                                </Grid>
                            </DataTemplate>
                        </controlextensions:FlyoutExtensions.ItemTemplate>
                    </Flyout>
                </AppBarButton.ContextFlyout>
            </AppBarButton>
            <AppBarButton x:Uid="ButtonSelectAll" Icon="SelectAll" Command="{Binding SelectAllItemsCommand}" Visibility="{Binding AllItemsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
            <AppBarButton x:Uid="ButtonUnSelectAll" Icon="ClearSelection" Command="{Binding ClearSelectionCommand}" Visibility="{Binding AllItemsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false, Mode=TwoWay}"/>
        </CommandBar>
    </Page.BottomAppBar>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageHeader.Visibility" Value="Visible"/>
                        <Setter Target="infoHeader.Orientation" Value="Vertical"/>
                        <Setter Target="infoCover.Width" Value="160"/>
                        <Setter Target="infoAction.Height" Value="Auto"/>
                        <Setter Target="infoProperties.Height" Value="Auto"/>
                        <Setter Target="infoTitle.HorizontalAlignment" Value="Center"/>
                        <Setter Target="infoSubTitle.HorizontalAlignment" Value="Center"/>
                        <Setter Target="albumGenre.HorizontalAlignment" Value="Center"/>
                        <Setter Target="infoAction.HorizontalAlignment" Value="Center"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageHeader.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader"
                             x:Uid="AlbumsDetailPage_Header"
                             Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Album"
                             Visibility="Collapsed"/>

        <ScrollViewer EntranceNavigationTransitionInfo.IsTargetElement="True"
                      RelativePanel.AlignBottomWithPanel="True"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="pageHeader">
            <RelativePanel EntranceNavigationTransitionInfo.IsTargetElement="True"
                       RelativePanel.AlignTopWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True">

                <Grid x:Name="infoPart" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignTopWithPanel="True">
                    <StackPanel x:Name="infoHeader" Orientation="Horizontal">
                        <StackPanel.Background>
                            <ImageBrush ImageSource="{Binding CoverSource}" Stretch="UniformToFill" Opacity="0.2"/>
                        </StackPanel.Background>
                        <Image x:Name="infoCover" Source="{Binding CoverSource}" Width="240" Height="{Binding Path=Width, RelativeSource={RelativeSource Mode=Self}}" Margin="10" Stretch="UniformToFill"/>
                        <Grid x:Name="infoProperties" Margin="10" Height="240">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="actionRow" Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="infoTitle" Text="{Binding Album.Title}" TextTrimming="WordEllipsis" Style="{StaticResource SubheaderTextBlockStyle}" Grid.Row="0"/>
                            <TextBlock x:Name="infoSubTitle" Text="{Binding Album.Artist.Name}" TextTrimming="WordEllipsis" Grid.Row="1"/>
                            <TextBlock x:Name="albumGenre" TextTrimming="WordEllipsis" Grid.Row="2">
                                <Run Text="{Binding Album.Year}" FontSize="12"/>
                                <Run Text="&#xE7C8;" FontFamily="Segoe MDL2 Assets" FontSize="8"/>
                                <Run Text="{Binding Album.Genre.Name}" FontSize="12"/>
                            </TextBlock>
                            <StackPanel x:Name="infoAction" Orientation="Horizontal" Grid.Row="3" VerticalAlignment="Bottom">
                                <HyperlinkButton Command="{Binding PlayAllCommand}" VerticalContentAlignment="Center" Foreground="{ThemeResource SystemBaseHighColor}">
                                    <Grid VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <FontIcon Glyph="&#xE102;" Grid.Column="0"/>
                                        <TextBlock x:Uid="AlbumDetailPage_PlayAll" Text="Alle wiedergeben" Margin="6,0,0,0" Grid.Column="1"/>
                                    </Grid>
                                </HyperlinkButton>

                                <HyperlinkButton x:Name="buttonAddAllTo" Command="{Binding OpenAllToPlaylistCommand}" VerticalContentAlignment="Center" Foreground="{ThemeResource SystemBaseHighColor}">
                                    <Grid VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <FontIcon Glyph="&#xE710;" Grid.Column="0"/>
                                        <TextBlock x:Uid="AlbumDetailPage_AddTo" Text="Hinzufügen zu" Margin="6,0,0,0" Grid.Column="1"/>
                                    </Grid>
                                    <HyperlinkButton.ContextFlyout>
                                        <Flyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsAllToPlaylistFlyoutOpen, Mode=TwoWay}"
                                                controlextensions:FlyoutExtensions.Parent="{Binding ElementName=buttonAddAllTo}"
                                                controlextensions:FlyoutExtensions.ItemsSource="{Binding MenuItemsPlaylist}">
                                            <controlextensions:FlyoutExtensions.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <MenuFlyoutItem Command="{Binding MenuItemClickedCommand}"
                                                                        CommandParameter="{Binding}"
                                                                        controlextensions:MenuFlyoutItem.UpdateTagTarget="True"
                                                                        Tag="{Binding InsertMode, ConverterParameter=All, Converter={StaticResource InsertModeConverter}, Mode=TwoWay}"
                                                                        Text="{Binding Text}"
                                                                        Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"/>
                                                        <MenuFlyoutSeparator Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </controlextensions:FlyoutExtensions.ItemTemplate>
                                        </Flyout>
                                    </HyperlinkButton.ContextFlyout>
                                </HyperlinkButton>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Grid>
                <ListView x:Name="listview" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="infoPart"
                          ItemsSource="{Binding Items}"
                          SelectionMode="{Binding HasSelectedItems, Converter={StaticResource BooleanToSelectionModeConverter}}"
                          IsItemClickEnabled="{Binding HasSelectedItems, Converter={StaticResource InverseBooleanConverter}}"
                          controlextensions:ListViewExtensions.Command="{Binding PlayTrackCommand}" 
                          controlextensions:ListViewExtensions.SelectedItems="{Binding SelectedItems, Mode=TwoWay}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid  x:Name="listViewItem" Height="48" Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="90"/>
                                </Grid.ColumnDefinitions>
                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}" 
                                                controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                                controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                                        <MenuFlyout.Items>
                                            <MenuFlyoutItem x:Uid="MenuFlyoutAddTo" Text="Add to"/>
                                            <MenuFlyoutItem x:Uid="MenuFlyoutSelectItems" Text="Select" Command="{Binding DataContext.SelectItemsCommand, ElementName=listview}" CommandParameter="{Binding}"
                                                            Visibility="{Binding DataContext.HasSelectedItems, ElementName=listview, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                                            <MenuFlyoutItem x:Uid="MenuFlyoutSelectAllItems" Text="Select All" Command="{Binding DataContext.SelectAllItemsCommand, ElementName=listview}" CommandParameter="{Binding}"
                                            Visibility="{Binding DataContext.AllItemsSelectable, ElementName=listview, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"/>
                                            <MenuFlyoutItem x:Uid="MenuFlyoutUnSelectAll" Text="Unselect All" Command="{Binding DataContext.ClearSelectionCommand, ElementName=listview}" CommandParameter="{Binding}"
                                            Visibility="{Binding DataContext.AllItemsSelected, ElementName=listview, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"/>
                                        </MenuFlyout.Items>
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                                <TextBlock Text="{Binding Data.TrackNumber}" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="0"/>
                                <TextBlock Text="{Binding Data.Name}"
                                       Margin="10,0,0,0" TextTrimming="WordEllipsis" 
                                       VerticalAlignment="Center" Grid.Column="1"/>
                                <TextBlock Text="{Binding Data.Duration}" 
                                       Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="2"/>
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="RightTapped">
                                        <core:InvokeCommandAction Command="{Binding DataContext.ShowFlyoutCommand, ElementName=listview}"
                                                                  InputConverter="{StaticResource RightTappedToPointConverter}"
                                                                  InputConverterParameter="{Binding ElementName=listViewItem}"/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </Grid>

                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </RelativePanel>
        </ScrollViewer>
    </RelativePanel>
</Page>
