<Page
    x:Class="BSE.Tunes.StoreApp.Views.AlbumDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:usercontrols="using:BSE.Tunes.StoreApp.Controls"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:AlbumDetailPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <DataTemplate x:Name="normalListViewItem">
            <UserControl>
                <Grid x:Name="listViewItem" Height="48">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                            <VisualState x:Name="VisualStateNarrow">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth" Value="0"/>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].Width" Value="0"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="VisualStateNormal">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth" Value="0"/>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].Width" Value="0"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="VisualStateWide">
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="listViewItem.ColumnDefinitions[2].MinWidth"  Value="300"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="400"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}" 
                                                controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                                controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                            <MenuFlyout.Items>
                                <MenuFlyoutItem x:Uid="MenuFlyoutSelectItems" Text="Select" Command="{Binding DataContext.SelectItemsCommand, ElementName=listview}" CommandParameter="{Binding}"
                                                Visibility="{Binding DataContext.HasSelectedItems, ElementName=listview, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                                <MenuFlyoutItem x:Uid="MenuFlyoutSelectAllItems" Text="Select All" Command="{Binding DataContext.SelectAllItemsCommand, ElementName=listview}" CommandParameter="{Binding}"
                                                Visibility="{Binding DataContext.AllItemsSelectable, ElementName=listview, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"/>
                                <MenuFlyoutItem x:Uid="MenuFlyoutUnSelectAll" Text="Unselect All" Command="{Binding DataContext.ClearSelectionCommand, ElementName=listview}" CommandParameter="{Binding}"
                                                Visibility="{Binding DataContext.AllItemsSelected, ElementName=listview, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"/>
                            </MenuFlyout.Items>
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>
<!--
                    Command="{Binding DataContext.PlayTrackCommand, ElementName=listview}" CommandParameter="{Binding}" 
                    -->
                    <!--<Button x:Name="PlayTrackButton"
                            Grid.Column="0"
                            Style="{StaticResource ListViewItemPointerOverButtonStyle}"
                            >
                        <Grid HorizontalAlignment="Stretch">
                            <TextBlock x:Name="TrackNumber" Text="{Binding Data.TrackNumber}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <FontIcon x:Name="FontIcon" Glyph="&#xE768;" Foreground="{ThemeResource SystemAccentColor}" FontSize="18" Visibility="Collapsed">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="PointerEntered" SourceObject="{Binding ElementName=listViewItem}">
                                        <core:ChangePropertyAction PropertyName="Visibility"
                                                                   TargetObject="{Binding ElementName=FontIcon}"
                                                                   Value="Visible" />
                                        <core:ChangePropertyAction PropertyName="Visibility"
                                                                   TargetObject="{Binding ElementName=TrackNumber}"
                                                                   Value="Collapsed" />
                                        <core:ChangePropertyAction PropertyName="Background"
                                                                   TargetObject="{Binding ElementName=PlayTrackButton}"
                                                                   Value="{ThemeResource HyperlinkButtonBackgroundPointerOver}" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior EventName="PointerExited" SourceObject="{Binding ElementName=listViewItem}">
                                        <core:ChangePropertyAction PropertyName="Visibility"
                                                                   TargetObject="{Binding ElementName=FontIcon}"
                                                                   Value="Collapsed" />
                                        <core:ChangePropertyAction PropertyName="Visibility"
                                                                   TargetObject="{Binding ElementName=TrackNumber}"
                                                                   Value="Visible" />
                                        <core:ChangePropertyAction PropertyName="Background"
                                                                   TargetObject="{Binding ElementName=PlayTrackButton}"
                                                                   Value="{x:Null}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </FontIcon>
                        </Grid>
                        
                    </Button>-->
                    <TextBlock x:Name="TrackNumber" Text="{Binding Data.TrackNumber}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding Data.Name}"
                                       Margin="10,0,0,0" TextTrimming="WordEllipsis" 
                                       VerticalAlignment="Center" Grid.Column="1"/>
                    <TextBlock Text="{Binding DataContext.Album.Artist.Name, ElementName=listview}" 
                                       Margin="10,0,0,0" TextTrimming="WordEllipsis" VerticalAlignment="Center" Grid.Column="2"/>
                    <TextBlock Text="{Binding Data.Duration}" 
                                       Margin="10,0,20,0" VerticalAlignment="Center" HorizontalAlignment="Right" TextAlignment="Right" Grid.Column="3"/>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="RightTapped">
                            <core:InvokeCommandAction Command="{Binding DataContext.ShowFlyoutCommand, ElementName=listview}"
                                                      InputConverter="{StaticResource RightTappedToPointConverter}"
                                                      InputConverterParameter="{Binding ElementName=listViewItem}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Grid>
            </UserControl>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="infoHeader.Orientation" Value="Vertical"/>
                        <Setter Target="infoCover.Width" Value="160"/>
                        <Setter Target="infoAction.Height" Value="Auto"/>
                        <Setter Target="infoProperties.Height" Value="Auto"/>
                        <Setter Target="infoTitle.HorizontalAlignment" Value="Center"/>
                        <Setter Target="infoSubTitle.HorizontalAlignment" Value="Center"/>
                        <Setter Target="albumGenre.HorizontalAlignment" Value="Center"/>
                        <Setter Target="infoAction.HorizontalAlignment" Value="Center"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listview.ItemTemplate" Value="{StaticResource normalListViewItem}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listview.ItemTemplate" Value="{StaticResource normalListViewItem}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <usercontrols:ListView x:Name="listview" Margin="20,20,20,0"
                               ItemTemplate="{StaticResource normalListViewItem}"
                               ItemsSource="{Binding Items}"
                               EnablePreSelection="True"
                               SelectionMode="{Binding HasSelectedItems, Converter={StaticResource BooleanToSelectionModeConverter}}"
                               AlternatingRow="{StaticResource ListViewAlternatingRowBrush}"
                               IsItemClickEnabled="{Binding HasSelectedItems, Converter={StaticResource InverseBooleanConverter}}"
                               controlextensions:ListViewExtensions.Command="{Binding PlayTrackCommand}"
                               controlextensions:ListViewExtensions.SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                               PreSelectionCommand="{Binding SelectItemsCommand}">
            <interactivity:Interaction.Behaviors>
                <behaviors:StickyHeaderBehavior />
            </interactivity:Interaction.Behaviors>
            <ListView.Header>
                <StackPanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

                    <StackPanel x:Name="infoPart">
                        <StackPanel x:Name="infoHeader" Orientation="Horizontal">
                            <StackPanel.Background>
                                <ImageBrush ImageSource="{Binding CoverSource}" Stretch="UniformToFill" Opacity="0.2"/>
                            </StackPanel.Background>
                            <Image x:Name="infoCover" Source="{Binding CoverSource}" Width="240" Height="{Binding Path=Width, RelativeSource={RelativeSource Mode=Self}}" Margin="10" Stretch="UniformToFill"/>
                            <Grid x:Name="infoProperties" Margin="10" Height="240">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="actionRow" Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="infoTitle" Text="{Binding Album.Title}"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       TextTrimming="WordEllipsis"
                                       TextWrapping="NoWrap"
                                       Grid.Row="0"/>
                                <TextBlock x:Name="infoSubTitle" Text="{Binding Album.Artist.Name}" 
                                       Style="{StaticResource SubtitleTextBlockStyle}"
                                       TextTrimming="WordEllipsis" Grid.Row="1"/>
                                <TextBlock x:Name="albumGenre" TextTrimming="WordEllipsis" Grid.Row="2">
                                <Run Text="{Binding Album.Year}" FontSize="12"/>
                                <Run Text="&#xE7C8;" FontFamily="Segoe MDL2 Assets" FontSize="8"/>
                                <Run Text="{Binding Album.Genre.Name}" FontSize="12"/>
                                </TextBlock>
                                <StackPanel x:Name="infoAction" Orientation="Horizontal" Grid.Row="3" VerticalAlignment="Bottom">
                                    <HyperlinkButton Command="{Binding PlayAllCommand}" VerticalContentAlignment="Center" Foreground="{ThemeResource SystemBaseHighColor}">
                                        <Grid VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <FontIcon Glyph="&#xE102;" Grid.Column="0"/>
                                            <TextBlock x:Uid="AlbumDetailPage_PlayAll" Text="Alle wiedergeben" Margin="6,0,0,0" Grid.Column="1"/>
                                        </Grid>
                                    </HyperlinkButton>

                                    <HyperlinkButton x:Name="buttonAddAllTo" Padding="10,0,0,0" Command="{Binding OpenAllToPlaylistCommand}" VerticalContentAlignment="Center" Foreground="{ThemeResource SystemBaseHighColor}">
                                        <Grid VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <FontIcon Glyph="&#xE710;" Grid.Column="0"/>
                                            <TextBlock x:Uid="AlbumDetailPage_AddTo" Text="Hinzufügen zu" Margin="6,0,0,0" Grid.Column="1"/>
                                        </Grid>
                                        <HyperlinkButton.ContextFlyout>
                                            <Flyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsAllToPlaylistFlyoutOpen, Mode=TwoWay}"
                                                controlextensions:FlyoutExtensions.Parent="{Binding ElementName=buttonAddAllTo}"
                                                controlextensions:FlyoutExtensions.ItemsSource="{Binding MenuItemsPlaylist}">
                                                <controlextensions:FlyoutExtensions.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <MenuFlyoutItem Command="{Binding MenuItemClickedCommand}"
                                                                        CommandParameter="{Binding}"
                                                                        controlextensions:MenuFlyoutItem.UpdateTagTarget="True"
                                                                        Tag="{Binding InsertMode, ConverterParameter=All, Converter={StaticResource InsertModeConverter}, Mode=TwoWay}"
                                                                        Text="{Binding Text}"
                                                                        Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"/>
                                                            <MenuFlyoutSeparator Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </controlextensions:FlyoutExtensions.ItemTemplate>
                                            </Flyout>
                                        </HyperlinkButton.ContextFlyout>
                                    </HyperlinkButton>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Height="45">
                        <CommandBar Background="Transparent" DefaultLabelPosition="Right" Visibility="{Binding IsCommandBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <AppBarButton x:Uid="ButtonClearSelection" Icon="Bullets" Command="{Binding ClearSelectionCommand}"/>
                            <AppBarButton x:Uid="ButtonPlaySelection" Icon="Play" Command="{Binding PlaySelectedItemsCommand}"
                                          Background="{ThemeResource SystemAccentColor}"/>
                            <AppBarButton x:Uid="ButtonPlayNext" Icon="MusicInfo" Command="{Binding PlayNextItemsCommand}"/>
                            <AppBarButton x:Name="buttonAddTo" x:Uid="ButtonAddToPlaylist" Icon="Add"
                            Command="{Binding OpenPlaylistFlyoutCommand}">
                                <AppBarButton.ContextFlyout>
                                    <Flyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsPlaylistFlyoutOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=buttonAddTo}"
                                        controlextensions:FlyoutExtensions.ItemsSource="{Binding MenuItemsPlaylist}">
                                        <controlextensions:FlyoutExtensions.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <MenuFlyoutItem Command="{Binding MenuItemClickedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Text="{Binding Text}"
                                                    controlextensions:MenuFlyoutItem.UpdateTagTarget="True"
                                                    Tag="{Binding InsertMode, ConverterParameter=Selected, Converter={StaticResource InsertModeConverter}, Mode=TwoWay}"
                                                    Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"/>
                                                    <MenuFlyoutSeparator Visibility="{Binding IsSeparator, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </controlextensions:FlyoutExtensions.ItemTemplate>
                                    </Flyout>
                                </AppBarButton.ContextFlyout>
                            </AppBarButton>
                            <AppBarButton x:Uid="ButtonSelectAll" Icon="SelectAll" Command="{Binding SelectAllItemsCommand}" Visibility="{Binding AllItemsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                            <AppBarButton x:Uid="ButtonUnSelectAll" Icon="ClearSelection" Command="{Binding ClearSelectionCommand}" Visibility="{Binding AllItemsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false, Mode=TwoWay}"/>
                        </CommandBar>
                    </StackPanel>
                </StackPanel>
            </ListView.Header>
            <ListView.Footer>
                <StackPanel x:Name="artistsAlbums">
                    <local:ArtistsAlbumsUserControl DataContext="{Binding ArtistsAlbums}"/>
                </StackPanel>
            </ListView.Footer>
        </usercontrols:ListView>

    </Grid>
</Page>
