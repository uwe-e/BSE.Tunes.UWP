<Page x:Class="BSE.Tunes.StoreApp.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:BSE.Tunes.StoreApp.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
      xmlns:converter="using:BSE.Tunes.StoreApp.Converters"
      xmlns:xaml="using:Windows.UI.Xaml"
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:SettingsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" EnumType="ElementTheme"/>
    </Page.Resources>
    
    <!--<Page.Resources>
        <converter:ValueWhenConverter x:Name="FalseWhenTrueConverter">
            <converter:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.When>
            <converter:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converter:ValueWhenConverter.Value>
            <converter:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.Otherwise>
        </converter:ValueWhenConverter>
    </Page.Resources>-->

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <!--  content  -->
        <RelativePanel EntranceNavigationTransitionInfo.IsTargetElement="True"
                       RelativePanel.AlignBottomWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True" 
                       Margin="12,14,0,13">

            <ScrollViewer Margin="0,12,-12,0"
                              HorizontalContentAlignment="Left"
                              VerticalScrollBarVisibility="Auto">
                <RelativePanel HorizontalAlignment="Left">

                    <Grid RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Uid="SettingsPage_TxtModeTitle" Text="Mode" Grid.Row="0" Style="{StaticResource SubtitleTextBlockStyle}"/>

                        <StackPanel Margin="{StaticResource XSmallTopMargin}">
                            <RadioButton x:Uid="Settings_Theme_Light"
                                         Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                         IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                                         FontSize="15"
                                         GroupName="AppTheme">
                                <RadioButton.CommandParameter>
                                    <xaml:ElementTheme>Light</xaml:ElementTheme>
                                </RadioButton.CommandParameter>
                            </RadioButton>
                            <RadioButton x:Uid="Settings_Theme_Dark"
                                         Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                         IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                                         FontSize="15"
                                         GroupName="AppTheme">
                                <RadioButton.CommandParameter>
                                    <xaml:ElementTheme>Dark</xaml:ElementTheme>
                                </RadioButton.CommandParameter>
                            </RadioButton>
                            <RadioButton x:Uid="Settings_Theme_Default"
                                         Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                         IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                                         FontSize="15"
                                         GroupName="AppTheme">
                                <RadioButton.CommandParameter>
                                    <xaml:ElementTheme>Default</xaml:ElementTheme>
                                </RadioButton.CommandParameter>
                            </RadioButton>
                        </StackPanel>

                        <!--<TextBlock x:Uid="SettingsPage_TxtModeChangedMessage" Text="You'll see your change the next time you start the app66" Grid.Row="1"  Visibility="{Binding ThemeSelectionHasChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <StackPanel Orientation="Vertical" Grid.Row="2">
                            <RadioButton Content="Light" Tag="True" IsChecked="{Binding UseLightTheme, Mode=TwoWay}"/>
                            <RadioButton Content="Dark" Tag="True" IsChecked="{Binding UseDarkTheme, Mode=TwoWay}"/>
                        </StackPanel>-->
                    </Grid>

                </RelativePanel>

            </ScrollViewer>
        </RelativePanel>
    </RelativePanel>
</Page>

