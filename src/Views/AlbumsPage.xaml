<Page
    x:Class="BSE.Tunes.StoreApp.Views.AlbumsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:AlbumsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Grid>

        <RelativePanel x:Name="pageContent">

            <!-- normal header  -->
            <TextBlock x:Name="normalPageHeader" x:Uid="AlbumsPage_PageHeader" Text="Albums"
                       Style="{StaticResource PageHeaderTextBlockStyle}"
                       RelativePanel.AlignTopWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"/>

            <StackPanel x:Name="filterPanel" Padding="20,10,20,0"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="normalPageHeader">
                <Grid>
                    <Grid Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel x:Name="randomPlayPanel" Grid.Column="0">
                            <HyperlinkButton x:Name="buttonPlayFiltered" Command="{Binding PlayRandomCommand}" VerticalContentAlignment="Center" Foreground="{ThemeResource SystemBaseHighColor}">
                                <Grid VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <FontIcon Glyph="&#xE8B1;" Grid.Column="0"/>
                                    <TextBlock TextTrimming="WordEllipsis" TextWrapping="NoWrap" Margin="6,0,0,0" Grid.Column="1">
                            <Run x:Uid="AlbumsPage_PlayRandom" Text="Shuffle all"/>
                            <Run Text="("/><Run Text="{Binding TracksCount}"/><Run Text=")"/>
                                    </TextBlock>
                                </Grid>
                            </HyperlinkButton>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                            <TextBlock x:Uid="AlbumsPage_FilterPanel_TxtGenre" Text="Genre" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                            <HyperlinkButton x:Name="buttonGenre" Command="{Binding OpenGenreFlyoutCommand}" VerticalAlignment="Center" Padding="10,0,0,0">
                                <HyperlinkButton.Content>
                                    <TextBlock TextTrimming="CharacterEllipsis" Style="{StaticResource BodyTextBlockStyle}" Text="{Binding SelectedGenre.Name}"/>
                                </HyperlinkButton.Content>
                                <HyperlinkButton.ContextFlyout>
                                    <Flyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsGenreFlyoutOpen, Mode=TwoWay}"
                                    controlextensions:FlyoutExtensions.Parent="{Binding ElementName=buttonGenre}"
                                    controlextensions:FlyoutExtensions.ItemsSource="{Binding Genres}">
                                        <controlextensions:FlyoutExtensions.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <MenuFlyoutItem Command="{Binding MenuItemClickedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Text="{Binding Text}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </controlextensions:FlyoutExtensions.ItemTemplate>
                                    </Flyout>
                                </HyperlinkButton.ContextFlyout>
                            </HyperlinkButton>
                        </StackPanel>
                        
                    </Grid>
                    <CommandBar DefaultLabelPosition="Right"
                                Background="{ThemeResource CommandBarBackgroundOpen}"
                                Visibility="{Binding IsCommandBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <AppBarButton x:Uid="ButtonClearSelection" Icon="Bullets" Command="{Binding ClearSelectionCommand}"/>
                        <AppBarButton x:Uid="ButtonPlaySelection" Icon="Play" Background="{ThemeResource SystemAccentColor}" Command="{Binding PlaySelectedItemsCommand}"/>
                    </CommandBar>
                </Grid>
            </StackPanel>

            <GridView x:Name="gridView" Padding="20,10,20,0"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="filterPanel"
                      ItemsSource="{Binding Albums}" DataFetchSize="1" ItemContainerStyle="{StaticResource ExpandedGridViewItemContainer}"
                      SelectionMode="{Binding HasSelectedItems, Converter={StaticResource BooleanToSelectionModeConverter}}"
                      IsItemClickEnabled="{Binding HasSelectedItems, Converter={StaticResource InverseBooleanConverter}}"
                      controlextensions:ListViewExtensions.Command="{Binding SelectItemCommand}"
                      controlextensions:ListViewExtensions.SelectedItems="{Binding SelectedItems, Mode=TwoWay}">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="gridViewItem" Width="150">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="150"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=gridViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                                    <MenuFlyout.Items>
                                        <MenuFlyoutItem x:Uid="MenuFlyoutPlayAll" Text="Play" Command="{Binding DataContext.PlayAllCommand, ElementName=gridView}" CommandParameter="{Binding}"/>
                                        <MenuFlyoutSeparator Visibility="{Binding DataContext.HasSelectedItems, ElementName=gridView, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                                        <MenuFlyoutItem x:Uid="MenuFlyoutSelectItems" Text="Select"
                                            Command="{Binding DataContext.SelectItemsCommand, ElementName=gridView}" CommandParameter="{Binding}"
                                            Visibility="{Binding DataContext.HasSelectedItems, ElementName=gridView, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                                    </MenuFlyout.Items>
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                            <Image x:Name="image" Stretch="Uniform" Source="{Binding Path=ImageSource}" Height="150" Grid.Row="0"/>
                            <TextBlock Grid.Row="1" Text="{Binding Title}" TextWrapping="WrapWholeWords" TextTrimming="WordEllipsis" MaxLines="2" x:Name="title" FontWeight="SemiBold"/>
                            <TextBlock Grid.Row="2" Text="{Binding Subtitle}" FontWeight="SemiLight" x:Name="description" TextTrimming="WordEllipsis" FontSize="12" />
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <core:InvokeCommandAction Command="{Binding DataContext.OpenFlyoutCommand, ElementName=gridView}"
                                                              InputConverter="{StaticResource RightTappedToPointConverter}"
                                                              InputConverterParameter="{Binding ElementName=gridViewItem}"/>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>

            </GridView>


        </RelativePanel>

    </Grid>
</Page>
